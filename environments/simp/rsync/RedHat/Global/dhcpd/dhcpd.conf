allow booting;
allow bootp;
ddns-update-style interim;

option space pxelinux;
option pxelinux.magic code 208 = string;
option pxelinux.configfile code 209 = text;
option pxelinux.pathprefix code 210 = text;
option pxelinux.reboottime code 211 = unsigned integer 32;
option architecture-type code 93 = unsigned integer 16;

class "pxeclients" {
  match if substring(option vendor-class-identifier, 0, 9) = "PXEClient";
  next-server 				10.0.0.2;

  # The appropriate value to use for the default UEFI PXEboot file
  # below depends upon the OS and whether secure boot is enabled:
  #   CentOS 7 (grub2) normal UEFI boot       -->  "linux-install/efi/grubx64.efi";
  #   CentOS 7 (grub2) secure UEFI boot       -->  "linux-install/efi/shim.efi";
  #   CentOS 6 (legacy grub) normal UEFI boot -->  "linux-install/efi/grub.efi";
  #   (There is no CentOS 6 support for secure boot)
  #
  if option architecture-type = 00:07 {
    filename    "linux-install/efi/grubx64.efi";
  } else {
    filename    "linux-install/pxelinux.0";
  }
}

subnet 10.0.0.0 netmask 255.255.255.0 {

  option routers			10.0.0.254;
  option subnet-mask			255.255.255.0;

  option domain-name			"your.domain";
  option domain-name-servers		10.0.0.1;

  option time-offset			-0;

  default-lease-time			21600;
  max-lease-time			43200;

  # We explicitly list our hosts to restrict the hosts that can access our
  # network.
  host ns {
    hardware ethernet 00:AA:BB:CC:DD:EE;
    fixed-address 10.0.0.1;
  }
}
